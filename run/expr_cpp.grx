// this is a grammar for parsing arithmetic expressions
// it is SLR(1), not LR(0)
%name ExprParser
%algo SLR
%target cpp

%top {
#include <vector>
}

%type e int
%type t int
%type f int

%type NUM int

e = e(expr) PLUS t(term); { v = expr + term; }
e = t(term); { v = term; }
t = t(term) MUL f(factor); { v = term * factor; }
t = f(factor); { v = factor; }
f = LPAREN e(expr) RPAREN; { v = expr; }
f = NUM(n); { v = n; }